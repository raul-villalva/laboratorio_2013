package ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Robot;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Area;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

public class Ventana extends JFrame{

	/**
	 * 
	 */
	
	int width = 800 ;
	int heigth = 500;
	ArrayList<modelo.Robot> robots = new ArrayList<modelo.Robot>();
	ArrayList<Pista> p= new ArrayList<Pista>();
	
	private static final long serialVersionUID = 1L;
	JPanel botones = new JPanel();
	JButton giro = new JButton("giro");
	JButton avance = new JButton("avance");
	JButton retroceso = new JButton("retroceso");
	JButton izquierda = new JButton("izquierda");
	JButton derecha = new JButton("derecha");
	JLabel label_velocidad = new JLabel("velocidad: ");
	JTextField velocidad  = new JTextField(3);
	JLabel label_tiempo = new JLabel("tiempo: ");
	JTextField tiempo  = new JTextField(3);
	
	
	JPanel cabeza = new JPanel();
	JLabel titulo = new JLabel("ROBOTS EN LA PISTA DE BAILE"); 
	JButton comenzar = new JButton("Comenzar");
	
	JPanel centro = new JPanel();
	JPanel eleccion = new JPanel();
	
	JPanel pistas = new JPanel();
	int cantidad = 0;
	
	class Pista extends JPanel {

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		JTextArea area = new JTextArea(10,10);
		public Pista(){
			
		
			setBorder(BorderFactory.createLineBorder(Color.black));
			setSize(150, 100);
			
			JRadioButton radioButton = new JRadioButton();
			BufferedImage myPicture;
			try {
				myPicture = ImageIO.read(new File("images/Robot2.png"));
				JLabel picLabel = new JLabel(new ImageIcon(myPicture));
				setLayout(new BorderLayout(10,10));
				
				
			
				add(picLabel,BorderLayout.NORTH);
				
				JLabel mov = new JLabel("movimiento"),vel = new JLabel("velocidad"), temp = new JLabel("tiempo");
				add(mov,BorderLayout.CENTER);
				add(vel,BorderLayout.WEST);
				add(radioButton,BorderLayout.EAST);
				
				setBorder(BorderFactory.createLineBorder(Color.black));
				add(area,BorderLayout.SOUTH);
				
			
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
	}
	
	
	public Ventana(){
		setSize(width, heigth);
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		
		{
			this.getContentPane().add(botones,BorderLayout.SOUTH);
			botones.add(giro);
			giro.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					Pista pis =p.get(0);
					pis.area.append("giro; \n");
					
				}
			});
			botones.add(avance);
			botones.add(retroceso);
			botones.add(izquierda);
			botones.add(derecha);
			botones.add(label_velocidad);
			botones.add(velocidad);
			velocidad.setText("1");
			botones.add(label_tiempo);
			botones.add(tiempo);
			tiempo.setText("1");
	
		}
		
		{
			this.getContentPane().add(cabeza,BorderLayout.BEFORE_FIRST_LINE);
			cabeza.add(titulo);
			cabeza.add(comenzar);
		}
		{
			this.getContentPane().add(centro,BorderLayout.CENTER);
			centro.setLayout(new BorderLayout());
			
			
		
			BufferedImage myPicture;
			try {
				myPicture = ImageIO.read(new File("images/robot.png"));
				JLabel picLabel = new JLabel(new ImageIcon(myPicture));
				eleccion.setLayout(new BorderLayout());
				centro.add(eleccion,BorderLayout.WEST);
				eleccion.add(picLabel,BorderLayout.NORTH);
				JButton boton = new JButton("agregar Robot");
				boton.addActionListener(new ActionListener() {
					
					@Override
					public void actionPerformed(ActionEvent e) {
					    /* modelo.Robot r = new modelo.Robot();
					     r.setNombre("fulanito"+cantidad);
					     robots.add(r);*/
						Pista pista = new Pista();
						p.add(pista);
					    pistas.add(pista);
					    validate();
						repaint();
					   
					     

						
					}
				});
				eleccion.add(boton,BorderLayout.CENTER);
				
				
				centro.add(pistas);
				
				
				
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
		}
		
		
		
		
		
		
		
	}
	
	public static void main(String[] arg){
		Ventana v = new Ventana();
		v.setVisible(true);
		
	}
}
